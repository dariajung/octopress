<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gunzip | Hacker School Log]]></title>
  <link href="http://blog.dariajung.com/blog/categories/gunzip/atom.xml" rel="self"/>
  <link href="http://blog.dariajung.com/"/>
  <updated>2014-07-23T10:05:15-04:00</updated>
  <id>http://blog.dariajung.com/</id>
  <author>
    <name><![CDATA[Daria Jung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Halfway, What???]]></title>
    <link href="http://blog.dariajung.com/blog/2014/07/23/halfway/"/>
    <updated>2014-07-23T09:52:02-04:00</updated>
    <id>http://blog.dariajung.com/blog/2014/07/23/halfway</id>
    <content type="html"><![CDATA[<p>Wow, wow, wow. This week marked the halfway point of my time at Hacker School. It&rsquo;s been an exciting time, with the incoming of the new batch (28 new Hacker Schoolers!) and 455 Broadway is much more lively than it was before. It&rsquo;s been harder to find a place to sit, which is a good problem to have. :)</p>

<p>I haven&rsquo;t blogged since last week, so a lot has happened since then:</p>

<ul>
<li>Very proud to say that I made the <code>cats</code> stream on Zulip.</li>
<li>My implementation of gunzip is undergoing debugging, so hopefully I can have that done by the end of the week.</li>
<li>Dana taught me how to solder! I soldered wires onto a strip of NeoPixels.</li>
<li>Dana and I checked out <a href="https://hackmanhattan.com/">HackManhattan</a>, a space for hardware hackers. They were kind enough to let us go through their extra parts and we found the power sources we were looking for for the party on Friday.</li>
<li>Mel Chua, our first resident, gave us very informative talks on different learning styles and how to maximize our time at Hacker School. I do sort of wish this happend on the first week for &ldquo;seconds&rdquo; since I feel like some of us floundered at figuring out how to get used to self-directedness.</li>
<li>I missed my first Friday session to go visit my mom in North Carolina.</li>
<li>I am back to being addicted to coffee. <a href="http://www.portorico.com/store/">Porto Rico Importing Co.</a> is my vice.</li>
</ul>


<p>Here&rsquo;s to another six weeks! Well, more like 5 and a half weeks. :D:D:D:D:D:D: &lt;&mdash; Some alums taught me this happy/sad combo face.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OCaml! Haskell! Gunzip!]]></title>
    <link href="http://blog.dariajung.com/blog/2014/07/15/gunzip/"/>
    <updated>2014-07-15T18:57:22-04:00</updated>
    <id>http://blog.dariajung.com/blog/2014/07/15/gunzip</id>
    <content type="html"><![CDATA[<p>For a couple of days, I told myself that I would study OCaml now that I have a decent grasp of Haskell. But it&rsquo;s actually been pretty
difficult to leave Haskell because I am rather enamoured with the language. &#10084;</p>

<p>I did however, manage to read through a good chunk of <a href="http://ocaml-book.com/">OCaml from the Very Beginning</a>, and work through the exercises that accompany each chapter. I found it to be a very solid introductory text, as the author makes no assumptions about the reader&rsquo;s background. I plan to finish it up at some point, and move on to <em>Real World OCaml</em>.</p>

<p>A couple of things that jumped out at me as I started learning OCaml:</p>

<ul>
<li>The standard library is pretty sparse. Will be checking out Jane Street&rsquo;s Core.</li>
<li>There are mutable data structures.</li>
<li>OCaml supports imperative and functional styles.</li>
<li>The introductory text, at least <em>OCaml from the Very Beginning</em>, emphasized understanding tail recursion (which I didn&rsquo;t really think about when learning Haskell, but maybe I did it wrong)</li>
<li>Utop is pretty cool.</li>
<li>I got confused by <code>=</code> and <code>==</code> because I wanted to use <code>==</code> but that seems to be reserved for people who really know what they&rsquo;re doing.</li>
</ul>


<p>For the past few days, I have been exploring file compression and decompression. I needed a new project and starting looking at what previous HSers had done, and I found this <a href="http://jvns.ca/blog/2013/10/24/day-16-gzip-plus-poetry-equals-awesome/">blog post</a> by alumna <a href="https://twitter.com/b0rk">Julia Evans</a> on implementing gunzip in Julia. So I&rsquo;ve decided to implement it in Haskell! :D :D :D</p>

<p>I&rsquo;ve been reading up on the <a href="http://www.gzip.org/algorithm.txt">algorithm specifications</a> for inflating and deflating and the <a href="http://www.gzip.org/format.txt">format</a> information. I tried looking at the source in C but my head started to hurt, so I have been studying Julia&rsquo;s <a href="https://github.com/jvns/gzip.jl/blob/master/gzip.jl">implementation</a>, which despite me never having seen Julia code before, has been very helpful.</p>

<p>I spent today working on parsing a gzipped file&rsquo;s header and metadata information. Tomorrow I will read up more on the algorithm description and dive into implementing inflate.</p>
]]></content>
  </entry>
  
</feed>
